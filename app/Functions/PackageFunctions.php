<?php

/**
 * Pivlu - Open source CMS (Content Management System).
 * Pivlu comes with the complete suite of tools that any business, team, or website owner needs.
 * https://pivlu.com
 *
 * Copyright (c) Chimilevschi Iosif-Gabriel
 * LICENSE:
 * Permissions of this strongest copyleft license are conditioned on making available complete source code 
 * of licensed works and modifications, which include larger works using a licensed work, under the same license. 
 * Copyright and license notices must be preserved. Contributors provide an express grant of patent rights. 
 * When a modified version is used to provide a service over a network, the complete source code of the modified version must be made available.
 *    
 * @copyright   Copyright (c) Chimilevschi Iosif-Gabriel
 * @license     https://opensource.org/license/agpl-v3  AGPL-3.0 License.
 * @author      Chimilevschi Iosif-Gabriel <office@pivlu.com>
 * 
 *  DO NOT edit this file manually. All changes will be lost after software update. For custom changes, use templates ans plugins system.
 */

namespace App\Functions;

use Illuminate\Support\Facades\File;
use Illuminate\Support\Facades\Artisan;
use Illuminate\Console\Command;

class PackageFunctions extends Command
{

    public static function views($package_name, $provider)
    {

        if (! PackageFunctions::viewsExists($package_name)) {
            PackageFunctions::publishViews($provider);
            echo ('Published views');
        } else {
            echo ('dfds');
            echo ('If you choose "yes", the existing files will be replaced. Any custom modifications will be lost. Do not forget to backup your files first.');
            if (Command::shouldOverwriteViews()) {

                echo ('Overwriting views file...');
                PackageFunctions::publishViews($provider, $force = true);
            } else {
                echo ('Existing views was not overwritten');
            }
        }
    }

    public static function configExists($fileName)
    {
        return File::exists(config_path($fileName));
    }

    public static function viewsExists($package_name)
    {
        return File::exists(resource_path('views/themes/' . $package_name));
    }

    public static function publishConfiguration($provider, $forcePublish = false)
    {
        $params = [
            '--provider' => $provider,
            '--tag' => "config"
        ];

        if ($forcePublish === true) {
            $params['--force'] = true;
        }

        Artisan::call('vendor:publish', $params);
    }


    public static function publishViews($provider, $forcePublish = false)
    {
        $params = [
            '--provider' => $provider,
            '--tag' => "views"
        ];

        if ($forcePublish === true) {
            $params['--force'] = true;
        }

        Artisan::call('vendor:publish', $params);
    }
}
