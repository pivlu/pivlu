<?php

/**
 * Pivlu - Open source CMS (Content Management System).
 * Pivlu comes with the complete suite of tools that any business, team, or website owner needs.
 * https://pivlu.com
 *
 * Copyright (c) Chimilevschi Iosif-Gabriel
 * LICENSE:
 * Permissions of this strongest copyleft license are conditioned on making available complete source code 
 * of licensed works and modifications, which include larger works using a licensed work, under the same license. 
 * Copyright and license notices must be preserved. Contributors provide an express grant of patent rights. 
 * When a modified version is used to provide a service over a network, the complete source code of the modified version must be made available.
 *    
 * @copyright   Copyright (c) Chimilevschi Iosif-Gabriel
 * @license     https://opensource.org/license/agpl-v3  AGPL-3.0 License.
 * @author      Chimilevschi Iosif-Gabriel <office@pivlu.com>
 * 
 *  DO NOT edit this file manually. All changes will be lost after software update. For custom changes, use templates ans plugins system.
 */

namespace App\Http\Middleware;

use Closure;
use Illuminate\Http\Request;
use Illuminate\Support\Facades;
use Illuminate\View\View;
use App\Models\Config;
use App\Models\ConfigLang;
use App\Models\ThemeConfig;
use App\Models\Language;

class ThemeMiddleware
{
    /**
     * Handle an incoming request.
     *
     * @param  \Illuminate\Http\Request  $request
     * @param  \Closure  $next
     * @return mixed
     */
    public function handle(Request $request, Closure $next)
    {        

        // Language
        $lang = $request->segment(1);

        if (strlen($lang) === 2 && Language::where(['code' => $lang, 'status' => 'active'])->exists()) {
            app()->setLocale($lang);
            setlocale(LC_ALL, $lang);
        }       

        Facades\View::composer('*', function (View $view) {
            $view->with('languages', Language::get_languages()); // active and inactive
            $view->with('active_languages', Language::get_active_languages()); // active languages
            $view->with('active_language', Language::get_active_language()); // active language
            $view->with('site_text_dir', Language::get_active_language()->dir ?? 'ltr');
            $view->with('theme_path', 'themes/'.Config::get_config('active_theme') ?? 'builder');

            // general config
            $config = Config::config();
            $view->with('config', $config);

            // theme config
            $theme_config = ThemeConfig::config();
            $view->with('theme_config', $theme_config);

            // config depending on language
            $config_lang = ConfigLang::config();
            $view->with('config_lang', $config_lang);

            // Locale
            $view->with('locale', config('app.locale'));

            // Website Menu links            
            $menu_links = ConfigLang::get_config(Language::get_active_language()->id, 'menu_links');
            if ($menu_links) {
                $menu_links = unserialize($menu_links);
                $menu_links = json_decode(json_encode($menu_links)); // array to object
            }
            $view->with('menu_links', $menu_links ?? array());            
        });

        return $next($request);
    }
}
