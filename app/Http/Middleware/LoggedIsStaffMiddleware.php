<?php

/**
 * Pivlu - Open source CMS (Content Management System).
 * Pivlu comes with the complete suite of tools that any business, team, or website owner needs.
 * https://pivlu.com
 *
 * Copyright (c) Chimilevschi Iosif-Gabriel
 * LICENSE:
 * Permissions of this strongest copyleft license are conditioned on making available complete source code 
 * of licensed works and modifications, which include larger works using a licensed work, under the same license. 
 * Copyright and license notices must be preserved. Contributors provide an express grant of patent rights. 
 * When a modified version is used to provide a service over a network, the complete source code of the modified version must be made available.
 *    
 * @copyright   Copyright (c) Chimilevschi Iosif-Gabriel
 * @license     https://opensource.org/license/agpl-v3  AGPL-3.0 License.
 * @author      Chimilevschi Iosif-Gabriel <office@pivlu.com>
 * 
 *  DO NOT edit this file manually. All changes will be lost after software update. For custom changes, use templates ans plugins system.
 */

namespace App\Http\Middleware;

use Closure;
use Illuminate\Http\Request;
use Symfony\Component\HttpFoundation\Response;
use Illuminate\Support\Facades;
use Illuminate\View\View;
use App\Models\PostType;
use App\Models\Plugin;
use Auth;

class LoggedIsStaffMiddleware
{
    /**
     * Handle an incoming request.
     *
     * @param  \Closure(\Illuminate\Http\Request): (\Symfony\Component\HttpFoundation\Response)  $next
     */
    public function handle(Request $request, Closure $next): Response
    {        
        if (Auth::user() ?? null) {
            if (!(Auth::user()->role == 'admin' || Auth::user()->role == 'internal'))
                return redirect('home');
        } else return redirect('home');

        
        Facades\View::composer('*', function (View $view) {
            // get custom posts types (used in sidebar menu for admins and internals accounts)
            $post_types = PostType::where('active', 1)->where('show_in_admin_menu', 1)->orderByDesc('core')->orderBy('name')->get();            
            $view->with('posts_types', $post_types ?? []);

            // get custom menu items from active plugins
            $active_plugins = Plugin::where('active', 1)->orderBy('name')->get();      
            $root_admin_menu_plugins = [];
            foreach($active_plugins as $active_plugin) {
                $plugin_config_file = config_path($active_plugin->plugin . '.php');                
                if(file_exists($plugin_config_file)) {
                    $config_file_format = str_replace('/', '.', $active_plugin->plugin);
                    $plugin_admin_menu = config($config_file_format.'.admin_menu');
                    $root_admin_menu_plugins[] = $plugin_admin_menu;
                }
            }      
            
            //dd($root_admin_menu_plugins);
            $view->with('root_admin_menu_plugins', $root_admin_menu_plugins ?? []);
        });

        
        return $next($request);
    }
}
