<?php

/**
 * Pivlu - Open source CMS (Content Management System).
 * Pivlu comes with the complete suite of tools that any business, team, or website owner needs.
 * https://pivlu.com
 *
 * Copyright (c) Chimilevschi Iosif-Gabriel
 * LICENSE:
 * Permissions of this strongest copyleft license are conditioned on making available complete source code 
 * of licensed works and modifications, which include larger works using a licensed work, under the same license. 
 * Copyright and license notices must be preserved. Contributors provide an express grant of patent rights. 
 * When a modified version is used to provide a service over a network, the complete source code of the modified version must be made available.
 *    
 * @copyright   Copyright (c) Chimilevschi Iosif-Gabriel
 * @license     https://opensource.org/license/agpl-v3  AGPL-3.0 License.
 * @author      Chimilevschi Iosif-Gabriel <office@pivlu.com>
 * 
 *  DO NOT edit this file manually. All changes will be lost after software update. For custom changes, use templates ans plugins system.
 */

namespace App\Http\Controllers\Admin;

use Illuminate\Http\Request;
use App\Http\Controllers\Controller;
use App\Models\PostType;
use Illuminate\Support\Str;

class PostTypeController extends Controller
{

    /**
     * Display all resources
     */
    public function index(Request $request)
    {
        $post_types = PostType::withCount('taxonomy_terms')->orderByDesc('core')->orderByDesc('active')->orderByDesc('id')->paginate(25);

        return view('admin.index', [
            'view_file' => 'admin.config.post-types',
            'active_menu' => 'config',
            'active_submenu' => 'config.website',            
            'active_tab' => 'cpt',
            'post_types' => $post_types,
        ]);
    }


    /**
     * Create new resource
     */
    public function store(Request $request)
    {
        if (!$request->name) return redirect(route('admin.post-types.index'));

        if (PostType::where('type', $request->type)->exists()) return redirect(route('admin.post-types.index'))->with('error', 'duplicate');

        $labels = array(
            'singular' => $request->label_singular ?? $request->name,
            'plural' => $request->label_plural ?? $request->name,
            'create' => $request->label_create ?? 'Create '.$request->name,
            'update' => $request->label_update ?? 'Update '.$request->name,
            'delete' => $request->label_delete ?? 'Delete '.$request->name,
            'all' => $request->label_all ?? 'All '.$request->name,
            'search' => $request->label_search ?? 'Search '.$request->name,
        );

        $slug = $request->slug ?? Str::slug($request->name, '-');
        if (PostType::where('slug', $slug)->exists()) return redirect(route('admin.post-types.index'))->with('error', 'duplicate');

        PostType::create([
            'type' => Str::slug($request->name, '-'),
            'name' => $request->name,
            'slug' => $slug,
            'description' => $request->description,
            'admin_menu_icon' => $request->admin_menu_icon,
            'active' => $request->has('active') ? 1 : 0,
            'show_in_admin_menu' => $request->has('show_in_admin_menu') ? 1 : 0,
            'internal_only' => $request->has('internal_only') ? 1 : 0,
            'labels' => json_encode($labels),
        ]);

        return redirect(route('admin.post-types.index'))->with('success', 'created');
    }


    /**
     * Update resource
     */
    public function update(Request $request)
    {
        $type = PostType::find($request->id);
        if (!$type) return redirect(route('admin.post-types.index'));

        $labels = array(
            'singular' => $request->label_singular ?? $request->name,
            'plural' => $request->label_plural ?? $request->name,
            'create' => $request->label_create ?? 'Create '.$request->name,
            'update' => $request->label_update ?? 'Update '.$request->name,
            'delete' => $request->label_delete ?? 'Delete '.$request->name,
            'all' => $request->label_all ?? 'All '.$request->name,
            'search' => $request->label_search ?? 'Search '.$request->name,
        );
        
        $slug = $request->slug ?? Str::slug($request->name, '-');
        if (PostType::where('slug', $slug)->where('id', '!=', $request->id)->exists()) return redirect(route('admin.post-types.index'))->with('error', 'duplicate');

        PostType::where('id', $request->id)->update([
            'name' => $request->name,
            'slug' => $slug,
            'description' => $request->description,
            'admin_menu_icon' => $request->admin_menu_icon,
            'active' => $request->has('active') ? 1 : 0,           
            'show_in_admin_menu' => $request->has('show_in_admin_menu') ? 1 : 0,
            'internal_only' => $request->has('internal_only') ? 1 : 0,
            'labels' => json_encode($labels),
        ]);

        return redirect(route('admin.post-types.index'))->with('success', 'updated');
    }


    /**
     * Remove the specified resource
     */
    public function destroy(Request $request)
    {

        $type = PostType::find($request->id);
        if (!$type) return redirect(route('admin.post-types.index'));

        Post::where('type', $type)->delete(); // soft delete
        $type->delete(); // soft delete
        
        return redirect(route('admin.post-types.index'))->with('success', 'deleted');
    }
}
