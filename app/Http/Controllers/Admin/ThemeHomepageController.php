<?php

/**
 * Pivlu - Open source CMS (Content Management System).
 * Pivlu comes with the complete suite of tools that any business, team, or website owner needs.
 * https://pivlu.com
 *
 * Copyright (c) Chimilevschi Iosif-Gabriel
 * LICENSE:
 * Permissions of this strongest copyleft license are conditioned on making available complete source code 
 * of licensed works and modifications, which include larger works using a licensed work, under the same license. 
 * Copyright and license notices must be preserved. Contributors provide an express grant of patent rights. 
 * When a modified version is used to provide a service over a network, the complete source code of the modified version must be made available.
 *    
 * @copyright   Copyright (c) Chimilevschi Iosif-Gabriel
 * @license     https://opensource.org/license/agpl-v3  AGPL-3.0 License.
 * @author      Chimilevschi Iosif-Gabriel <office@pivlu.com>
 * 
 *  DO NOT edit this file manually. All changes will be lost after software update. For custom changes, use templates ans plugins system.
 */

namespace App\Http\Controllers\Admin;

use Auth;
use App\Models\Theme;
use App\Models\Block;
use App\Functions\BlockFunctions;
use Illuminate\Http\Request;
use App\Http\Controllers\Controller;


class ThemeHomepageController extends Controller
{

    /**
     * Update homepage block content   
     */
    public function update_block(Request $request)
    {
        $theme = Theme::where('slug', $request->slug)->first();
        if (!$theme) return redirect(route('admin.themes.index'));

        $last_pos = Block::where(['is_homepage_block' => 1, 'theme_id' => $theme->id])->orderByDesc('position')->value('position');
        $position = ($last_pos ?? 0) + 1;

        $block = Block::create([
            'type_id' => $request->type_id,
            'position' => $position,
            'is_homepage_block' => 1,
            'theme_id' => $theme->id,
            'user_id' => Auth::user()->id
        ]);

        BlockFunctions::regenerate_homepage_blocks($theme->id);

        return redirect(route('admin.blocks.show', ['id' => $block->id, 'type_id' => $request->type_id]));
    }



    /**
     * Remove the specified block content
     */
    public function delete_block(Request $request)
    {
        $theme = Theme::where('slug', $request->slug)->first();
        if (!$theme) return redirect(route('admin.themes.index'));

        Block::where('id', $request->block_id)->delete();

        BlockFunctions::regenerate_homepage_blocks($theme->id);

        return redirect(route('admin.themes.show', ['slug' => $theme->slug, 'theme_tab' => 'homepage']))->with('success', 'deleted');
    }


    /**
     * Ajax sortable
     */
    public function sortable_blocks(Request $request)
    {
        $i = 0;
        $records = $request->all();

        foreach ($records['item'] as $key => $value) {

            Block::where('theme_id', $request->theme_id)
                ->where('is_homepage_block', 1)
                ->where('id', $value)
                ->update([
                    'position' => $i,
                ]);

            $i++;
        }

        BlockFunctions::regenerate_homepage_blocks($request->theme_id);
    }
}
