<?php

/**
 * Pivlu - Open source CMS (Content Management System).
 * Pivlu comes with the complete suite of tools that any business, team, or website owner needs.
 * https://pivlu.com
 *
 * Copyright (c) Chimilevschi Iosif-Gabriel
 * LICENSE:
 * Permissions of this strongest copyleft license are conditioned on making available complete source code 
 * of licensed works and modifications, which include larger works using a licensed work, under the same license. 
 * Copyright and license notices must be preserved. Contributors provide an express grant of patent rights. 
 * When a modified version is used to provide a service over a network, the complete source code of the modified version must be made available.
 *    
 * @copyright   Copyright (c) Chimilevschi Iosif-Gabriel
 * @license     https://opensource.org/license/agpl-v3  AGPL-3.0 License.
 * @author      Chimilevschi Iosif-Gabriel <office@pivlu.com>
 * 
 *  DO NOT edit this file manually. All changes will be lost after software update. For custom changes, use templates ans plugins system.
 */

namespace App\Http\Controllers\Admin;

use Illuminate\Http\Request;
use App\Http\Controllers\Controller;
use App\Models\UserInternalNote;
use App\Models\User;
use App\Functions\FileFunctions;
use Auth;

class AccountInternalNoteController extends Controller
{

    /**
     * Account internal notes
     */
    public function index(Request $request)
    {

        $account = User::withCount('internal_notes')->find($request->account_id);
        if (!$account) redirect(route('admin.accounts.index'));

        $notes = UserInternalNote::with('media')->where('user_id', $request->account_id)->with('author')
            ->orderByDesc('sticky')
            ->orderBy('id')
            ->paginate(25);

        return view('admin.index', [
            'view_file' => 'admin.accounts.internal-notes',
            'active_menu' => 'users',
            'active_submenu' => 'users.' . $account->role,
            'account' => $account,
            'notes' => $notes,
            'menu_section' => 'notes',
        ]);
    }


    /**
     * Create resource
     */
    public function store(Request $request)
    {
        $note = UserInternalNote::create([
            'note' => $request->note,
            'sticky' => $request->has('sticky') ? 1 : 0,
            'user_id' => $request->account_id,
            'created_by_user_id' => Auth::user()->id,
        ]);

        // process attachment
        if ($request->hasFile('file')) {
            $media = FileFunctions::store_file($request->file('file'));
            if ($media) $note->update(['media_id' => $media->id]);
        }

        return redirect(route('admin.accounts.internal-notes.index', ['account_id' => $request->account_id]))->with('success', 'created');
    }


    /**
     * Delete resource
     */
    public function destroy(Request $request)
    {
        $note = UserInternalNote::find($request->note_id);
        if (!$note) return redirect(route('admin.accounts.internal-notes.index', ['account_id' => $request->account_id]));

        UserInternalNote::where('id', $request->note_id)->delete();

        if ($note->media_id) {
            FileFunctions::delete_file($note->media_id);        
        }
        
        return redirect(route('admin.accounts.internal-notes.index', ['account_id' => $request->account_id]))->with('success', 'deleted');
    }
}
