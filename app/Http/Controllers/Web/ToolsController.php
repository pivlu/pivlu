<?php

/**
 * Pivlu - Open source CMS (Content Management System).
 * Pivlu comes with the complete suite of tools that any business, team, or website owner needs.
 * https://pivlu.com
 *
 * Copyright (c) Chimilevschi Iosif-Gabriel
 * LICENSE:
 * Permissions of this strongest copyleft license are conditioned on making available complete source code 
 * of licensed works and modifications, which include larger works using a licensed work, under the same license. 
 * Copyright and license notices must be preserved. Contributors provide an express grant of patent rights. 
 * When a modified version is used to provide a service over a network, the complete source code of the modified version must be made available.
 *    
 * @copyright   Copyright (c) Chimilevschi Iosif-Gabriel
 * @license     https://opensource.org/license/agpl-v3  AGPL-3.0 License.
 * @author      Chimilevschi Iosif-Gabriel <office@pivlu.com>
 * 
 *  DO NOT edit this file manually. All changes will be lost after software update. For custom changes, use templates ans plugins system.
 */

namespace App\Http\Controllers\Web;

use App\Http\Controllers\Controller;
use Illuminate\Http\Request;
use App\Models\Config;

class ToolsController extends Controller
{

    /**
     * Maintenance mode 
     */
    public function maintenance(Request $request)
    {
        if (!(Config::config()->website_maintenance_enabled ?? null)) return redirect(route('home'));

        return view('web.maintenance', []);
    }


    /**
     * User blocked
     */
    public function user_blocked(Request $request)
    {
        if (Auth::user()->blocked_at) {
            $block_reason = UserMeta::get_meta(Auth::user()->id, 'block_reason');
        }

        return view('web.usre-blocked', ['block_reason' => $block_reason]);
    }



    /**
     * Theme fake post
     */
    public function theme_fake_post(Request $request)
    {
        $active_theme = Config::config()->active_theme ?? null;
        $sample_file = $request->file;

        return view('themes.' . $active_theme . '.includes.samples.' . $sample_file, []);
    }
}
