<?php

/**
 * Pivlu - Open source CMS (Content Management System).
 * Pivlu comes with the complete suite of tools that any business, team, or website owner needs.
 * https://pivlu.com
 *
 * Copyright (c) Chimilevschi Iosif-Gabriel
 * LICENSE:
 * Permissions of this strongest copyleft license are conditioned on making available complete source code 
 * of licensed works and modifications, which include larger works using a licensed work, under the same license. 
 * Copyright and license notices must be preserved. Contributors provide an express grant of patent rights. 
 * When a modified version is used to provide a service over a network, the complete source code of the modified version must be made available.
 *    
 * @copyright   Copyright (c) Chimilevschi Iosif-Gabriel
 * @license     https://opensource.org/license/agpl-v3  AGPL-3.0 License.
 * @author      Chimilevschi Iosif-Gabriel <office@pivlu.com>
 * 
 *  DO NOT edit this file manually. All changes will be lost after software update. For custom changes, use templates ans plugins system.
 */

namespace App\Http\Controllers\Web;

use App\Http\Controllers\Controller;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Validator;
use Illuminate\Support\Facades\Cookie;
use App\Models\Post;
use App\Models\PostCateg;
use App\Models\PostTag;
use App\Models\PostTagItem;
use App\Models\PostComment;
use App\Models\PostLike;
use App\Models\Config;
use App\Models\Language;
use App\Models\TemplateLayout;
use Auth;

class PostController extends Controller
{

    /**
     *  Show post
     */
    public function show(Request $request)
    {
        if (((Config::config()->module_posts ?? null) != 'active')) return redirect(route('home'));

        $slug = $request->slug;
        $categ_slug = $request->categ_slug;

        if (!$slug || !$categ_slug) return redirect(route('posts'));

        $post = Post::with('author', 'category')->whereNull('deleted_at')
            ->whereHas('category', function ($query) use ($categ_slug) {
                $query->where('active', 1)->where('lang_id', Language::get_active_language()->id)->where('slug', $categ_slug);
            })
            ->where('status', 'published')
            ->where('slug', $slug)
            ->where('lang_id', Language::get_active_language()->id)
            ->first();

        if (!$post) return redirect(route('posts'));

        if ($post->blocks) $content_blocks = unserialize($post->blocks);

        $categ = PostCateg::where('id', $post->categ_id)->where('active', 1)->first();
        if (!$categ) return redirect(route('posts'));
        
        $related_posts = Post::where('id', '!=', $post->id)
            ->whereNull('deleted_at')
            ->where('status', 'published')
            ->orderByDesc('featured')
            ->orderByDesc('id')
            ->where('lang_id', Language::get_active_language()->id)
            ->limit(Config::config()->posts_per_page ?? 12)
            ->get();

        // update hits
        Post::where('id', $post->id)->increment('hits');

        // layout
        if (Config::config()->tpl_posts_post_layout_id ?? null) $layout = TemplateLayout::find(Config::config()->tpl_posts_post_layout_id);

        return view('web.builder.post', [
            'post' => $post,
            'content_blocks' => $content_blocks ?? array(),
            'related_posts' => $related_posts,
            'likes_enabled' => $likes_enabled,
            'comments' => $comments,
            'tags' => $tags,

            'layout' => $layout ?? null,
            'layout_top' => $layout->top ?? null,
            'layout_bottom' => $layout->bottom ?? null,
            'layout_sidebar' => $layout->sidebar ?? null,
        ]);
    }

    /**
     * Search results
     */
    public function search(Request $request)
    {
        if (((Config::config()->module_posts ?? null) != 'active')) return redirect(route('home'));

        $s = $request->s;
        $lang = $request->lang;

        $posts = Post::with('author', 'category')
            ->whereNull('deleted_at')
            ->where('status', 'published')
            ->where(function ($query) use ($s) {
                $query->where('title', 'like', "%$s%")
                    ->orWhere('search_terms', 'like', "%$s%")
                    ->orWhere('tags', 'like', "%$s%");
            });

        if (!$lang) {
            $posts = $posts->where('posts.lang_id', Language::get_default_language()->id);
        } else {
            $posts = $posts->where('posts.lang_id', Language::get_active_language()->id);
        }

        $posts = $posts->orderBy('posts.featured', 'desc')
            ->orderBy('posts.id', 'desc')
            ->paginate(Config::config()->posts_per_page ?? 12);

        return view('web.builder.posts-search', [
            'posts' => $posts,
            's' => $s,
        ]);
    }


}
