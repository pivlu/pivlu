<?php

/**
 * Pivlu - Open source CMS (Content Management System).
 * Pivlu comes with the complete suite of tools that any business, team, or website owner needs.
 * https://pivlu.com
 *
 * Copyright (c) Chimilevschi Iosif-Gabriel
 * LICENSE:
 * Permissions of this strongest copyleft license are conditioned on making available complete source code 
 * of licensed works and modifications, which include larger works using a licensed work, under the same license. 
 * Copyright and license notices must be preserved. Contributors provide an express grant of patent rights. 
 * When a modified version is used to provide a service over a network, the complete source code of the modified version must be made available.
 *    
 * @copyright   Copyright (c) Chimilevschi Iosif-Gabriel
 * @license     https://opensource.org/license/agpl-v3  AGPL-3.0 License.
 * @author      Chimilevschi Iosif-Gabriel <office@pivlu.com>
 * 
 *  DO NOT edit this file manually. All changes will be lost after software update. For custom changes, use templates ans plugins system.
 */

use App\Models\Media;
use App\Models\User;
use App\Models\Language;
use Illuminate\Support\Facades\Storage;

// Return image url
if (!function_exists('image')) {
	function image($media_id, $format = null)
	{
		$media = Media::find($media_id);

		if (!$media) return asset('assets/img/no-image.png');

		if (! $format)
			$filename_format = $media->filename;
		elseif ($format == 'small')
			$filename_format = '/small_' . $media->filename;
		elseif ($format == 'square')
			$filename_format = '/square_' . $media->filename;
		elseif ($format == 'thumb')
			$filename_format = '/thumb_' . $media->filename;
		elseif ($format == 'thumb_square')
			$filename_format = '/thumb_square_' . $media->filename;
		else
			$filename_format = $media->filename;

		if ($media->folder) $filename_format = $media->folder . '/' . $filename_format;

		$url = Storage::disk($media->disk)->url($filename_format);

		return $url;
	}
}

// Return avatar url
if (!function_exists('avatar')) {
	function avatar($user_id, $format = null, $show_no_avatar = null)
	{
		$user = User::find($user_id);		
		$media = Media::find($user->avatar_media_id ?? null);
		if (!$media) {
			if(!$show_no_avatar) return null;
			else {
				if ($format == 'thumb')
					return asset('assets/img/no-avatar-icon.png');
				else
					return asset('assets/img/no-avatar.png');
			}
		}

		if (! $format)
			$filename_format = $media->filename;
		elseif ($format == 'thumb')
			$filename_format = '/thumb_' . $media->filename;
		else
			$filename_format = $media->filename;

		if ($media->folder) $filename_format = $media->folder . '/' . $filename_format;

		$url = Storage::disk($media->disk)->url($filename_format);

		return $url;
	}
}


// generate flag image from language code
if (!function_exists('flag')) {
	function flag($identificator, $style = null)
	{
		if (is_int($identificator))
			$lang = Language::where('id', $identificator)->first();
		else
			$lang = Language::where('code', $identificator)->first();

		if (!$lang) return null;

		if ($style == 'circle')
			$flag_url = asset('assets/img/flags/circle/' . $lang->code . '.svg');
		else
			$flag_url = asset('assets/img/flags/' . $lang->code . '.png');

		return '<img alt="' . $lang->name . '" title="' . $lang->name . '" class="img-flag" src=" ' . $flag_url . '">';
	}
}
