<?php

/**
 * Pivlu - Open source CMS (Content Management System).
 * Pivlu comes with the complete suite of tools that any business, team, or website owner needs.
 * https://pivlu.com
 *
 * Copyright (c) Chimilevschi Iosif-Gabriel
 * LICENSE:
 * Permissions of this strongest copyleft license are conditioned on making available complete source code 
 * of licensed works and modifications, which include larger works using a licensed work, under the same license. 
 * Copyright and license notices must be preserved. Contributors provide an express grant of patent rights. 
 * When a modified version is used to provide a service over a network, the complete source code of the modified version must be made available.
 *    
 * @copyright   Copyright (c) Chimilevschi Iosif-Gabriel
 * @license     https://opensource.org/license/agpl-v3  AGPL-3.0 License.
 * @author      Chimilevschi Iosif-Gabriel <office@pivlu.com>
 * 
 *  DO NOT edit this file manually. All changes will be lost after software update. For custom changes, use templates ans plugins system.
 */

namespace App\Models;

use Illuminate\Database\Eloquent\Model;

class PostDocsSection extends Model
{

    protected $fillable = [
        'post_id',
        'parent_id',
        'position',
        'active',
    ];

    protected $table = 'pivlu_post_docs_sections';

    protected $appends = ['all_languages_contents'];

    public function post()
    {
        return $this->belongsTo(Post::class, 'post_id');
    }

    // Default language content
    public function default_language_content()
    {
        return $this->hasOne(PostDocsSectionContent::class, 'docs_section_id')->where('lang_id', Language::get_default_language()->id);
    }

    // Active language content
    public function active_language_content()
    {
        return $this->hasOne(PostDocsSectionContent::class, 'docs_section_id')->where('lang_id', Language::get_active_language()->id);
    }

    public function getAllLanguagesContentsAttribute()
    {
        $all_language_contents = [];
        $langs = Language::get_languages();
        foreach ($langs as $lang) {
            $content = PostDocsSectionContent::where('lang_id', $lang->id)->where('docs_section_id', $this->id)->first();
            $all_language_contents[] = [
                'lang_id' => $lang->id,
                'lang_name' => $lang->name,
                'lang_code' => $lang->code,
                'title' => $content->title ?? null,
                'slug' => $content->slug ?? null,
                'search_terms' => $content->search_terms ?? null,
                'description' => $content->summary ?? null,
            ];
        }
        return json_decode(json_encode($all_language_contents, JSON_UNESCAPED_UNICODE));
    }
}
