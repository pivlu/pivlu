<?php

/**
 * Pivlu - Open source CMS (Content Management System).
 * Pivlu comes with the complete suite of tools that any business, team, or website owner needs.
 * https://pivlu.com
 *
 * Copyright (c) Chimilevschi Iosif-Gabriel
 * LICENSE:
 * Permissions of this strongest copyleft license are conditioned on making available complete source code 
 * of licensed works and modifications, which include larger works using a licensed work, under the same license. 
 * Copyright and license notices must be preserved. Contributors provide an express grant of patent rights. 
 * When a modified version is used to provide a service over a network, the complete source code of the modified version must be made available.
 *    
 * @copyright   Copyright (c) Chimilevschi Iosif-Gabriel
 * @license     https://opensource.org/license/agpl-v3  AGPL-3.0 License.
 * @author      Chimilevschi Iosif-Gabriel <office@pivlu.com>
 * 
 *  DO NOT edit this file manually. All changes will be lost after software update. For custom changes, use templates ans plugins system.
 */

namespace App\Models;

use Illuminate\Database\Eloquent\Model;

class RolePermission extends Model
{

    protected $table = 'pivlu_role_permissions';

    protected $fillable = ['role_id', 'permission_id'];

    public function role()
    {
        return $this->belongsTo(Role::class, 'role_id');
    }

    public function permission_details()
    {
        return $this->belongsTo(Permission::class, 'permission_id')->with('post_type');
    }

    public static function check_permission($role, $permission, $post_type_id = null)
    {
        if (!(($role ?? null) || ($permission ?? null))) return false;

        $role_id = Role::where('role', $role)->value('id') ?? null;
        if (! $role_id) return false;

        if ($post_type_id)
            $permission_id = Permission::where(['permission' => $permission, 'post_type_id' => $post_type_id])->value('id') ?? null;
        else
            $permission_id = Permission::where(['permission' => $permission])->value('id') ?? null;

        if (!$permission_id) return false;

        return RolePermission::where(['role_id' => $role_id, 'permission_id' => $permission_id])->exists();
    }
}
