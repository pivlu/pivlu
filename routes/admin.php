<?php

/**
 * Pivlu - Open source CMS (Content Management System).
 * Pivlu comes with the complete suite of tools that any business, team, or website owner needs.
 * https://pivlu.com
 *
 * Copyright (c) Chimilevschi Iosif-Gabriel
 * LICENSE:
 * Permissions of this strongest copyleft license are conditioned on making available complete source code 
 * of licensed works and modifications, which include larger works using a licensed work, under the same license. 
 * Copyright and license notices must be preserved. Contributors provide an express grant of patent rights. 
 * When a modified version is used to provide a service over a network, the complete source code of the modified version must be made available.
 *    
 * @copyright   Copyright (c) Chimilevschi Iosif-Gabriel
 * @license     https://opensource.org/license/agpl-v3  AGPL-3.0 License.
 * @author      Chimilevschi Iosif-Gabriel <office@pivlu.com>
 * 
 *  DO NOT edit this file manually. All changes will be lost after software update. For custom changes, use templates ans plugins system.
 */

declare(strict_types=1);

use Illuminate\Support\Facades\Route;

use App\Http\Controllers\Admin\AjaxController;
use App\Http\Controllers\Admin\AccountController;
use App\Http\Controllers\Admin\AccountInternalNoteController;
use App\Http\Controllers\Admin\AccountRoleController;
use App\Http\Controllers\Admin\BlockController;
use App\Http\Controllers\Admin\BlockComponentController;
use App\Http\Controllers\Admin\ConfigController;
use App\Http\Controllers\Admin\DashboardController;
use App\Http\Controllers\Admin\BlockFormController;
use App\Http\Controllers\Admin\FormController;
use App\Http\Controllers\Admin\LangController;
use App\Http\Controllers\Admin\ModuleController;
use App\Http\Controllers\Admin\PostTypeController;
use App\Http\Controllers\Admin\PostTypeTaxonomyController;
use App\Http\Controllers\Admin\PostController;
use App\Http\Controllers\Admin\PostTaxonomyController;
use App\Http\Controllers\Admin\RecycleBinController;
use App\Http\Controllers\Admin\ThemeController;
use App\Http\Controllers\Admin\ThemeFooterController;
use App\Http\Controllers\Admin\ThemeHomepageController;
use App\Http\Controllers\Admin\ThemeButtonController;
use App\Http\Controllers\Admin\ThemeMenuController;
use App\Http\Controllers\Admin\ThemeMenuDropdownController;
use App\Http\Controllers\Admin\ThemeStyleController;

use App\Http\Middleware\LoggedIsAdminMiddleware;

Route::get('account/admin', [DashboardController::class, 'dashboard'])->name('admin');

Route::prefix('account/admin')->name('admin.')->group(function () {
    // Dashboard
    Route::get('dashboard', [DashboardController::class, 'dashboard'])->name('dashboard');

    // Roles and permissions
    Route::resource('accounts/roles', AccountRoleController::class)->parameters(['roles' => 'role']);
    //Route::get('accounts/roles/{role}', [AccountRoleController::class, 'permissions'])->where('role', '[a-zA-Z0-9_]+')->name('roles.permissions');
    //Route::post('accounts/roles/{role}', [AccountController::class, 'update_permissions']);

    // Accounts
    Route::resource('accounts', AccountController::class)->parameters(['accounts' => 'id']);

    Route::get('account/{id}/block', [AccountController::class, 'block'])->where('id', '[0-9]+')->name('account.block');
    Route::post('account/{id}/action/{action}', [AccountController::class, 'action'])->where('id', '[0-9]+')->where('action', '[a-zA-Z0-9]+')->name('account.action');

    Route::get('account/{id}/reset-password', [AccountController::class, 'reset_password'])->where('id', '[0-9]+')->name('account.reset_password');
    Route::post('account/{id}/reset-password', [AccountController::class, 'reset_password_action'])->where('id', '[0-9]+');

    Route::resource('accounts.internal-notes', AccountInternalNoteController::class)->parameters(['accounts' => 'account_id', 'internal-notes' => 'note_id'])->shallow();

    // Posts
    Route::resource('post-types', PostTypeController::class)->parameters(['post-types' => 'id']);
    Route::resource('post-type-taxonomies', PostTypeTaxonomyController::class)->parameters(['post-type-taxonomies' => 'id']);
    Route::resource('post-taxonomies', PostTaxonomyController::class)->parameters(['post-taxonomies' => 'id']);

    Route::resource('posts', PostController::class)->parameters(['posts' => 'id']);
    Route::post('posts/{id}/sortable', [PostController::class, 'sortable'])->name('posts.sortable')->where('id', '[0-9]+');
    Route::get('posts/{id}/content', [PostController::class, 'content'])->name('posts.content')->where('id', '[0-9]+');
    Route::post('posts/{id}/content', [PostController::class, 'update_content'])->name('posts.content.new')->where('id', '[0-9]+');
    Route::delete('posts/{id}/content/delete/{block_id}', [PostController::class, 'delete_content'])->name('posts.content.delete')->where('id', '[0-9]+')->where('block_id', '[0-9]+');
    Route::get('posts/{id}/delete-main-image', [PostController::class, 'delete_main_image'])->name('posts.delete_main_image')->where('id', '[0-9]+');

    // Theme Menus
    Route::resource('appearance/theme-menus', ThemeMenuController::class)->parameters(['theme-menus' => 'id']);
    Route::post('appearance/theme-menu/{menu_id}/item/create', [ThemeMenuController::class, 'store_item'])->name('theme-menus.item.create')->where('menu_id', '[0-9]+');
    Route::put('appearance/theme-menu/item/update/{item_id}', [ThemeMenuController::class, 'update_item'])->name('theme-menus.item.update')->where('item_id', '[0-9]+');
    Route::delete('appearance/theme-menu/item/delete/{item_id}', [ThemeMenuController::class, 'delete_item'])->name('theme-menus.item.delete')->where('item_id', '[0-9]+');
    Route::post('appearance/theme-menu/{menu_id}/items/sortable', [ThemeMenuController::class, 'sortable'])->name('theme-menus.items.sortable')->where('menu_id', '[0-9]+');

    Route::get('appearance/theme-menu/{parent_id}/dropdown', [ThemeMenuDropdownController::class, 'index'])->name('theme-menu.dropdown')->where(['parent_id' => '[0-9]+']);
    Route::post('appearance/theme-menu/{parent_id}/dropdown', [ThemeMenuDropdownController::class, 'store'])->where(['parent_id' => '[0-9]+']);
    Route::put('appearance/theme-menu/{parent_id}/dropdown/update/{item_id}', [ThemeMenuDropdownController::class, 'update'])->name('theme-menu.dropdown.update')->where(['parent_id' => '[0-9]+', 'item_id' => '[0-9]+']);
    Route::delete('appearance/theme-menu/{parent_id}/dropdown/delete/{item_id}', [ThemeMenuDropdownController::class, 'destroy'])->name('theme-menu.dropdown.delete')->where(['parent_id' => '[0-9]+', 'item_id' => '[0-9]+']);
    Route::post('appearance/theme-menu/{parent_id}dropdown/sortable', [ThemeMenuDropdownController::class, 'sortable'])->name('theme-menu.dropdown.sortable')->where(['parent_id' => '[0-9]+']);

    // Theme Footer
    Route::get('appearance/theme-footer', [ThemeFooterController::class, 'index'])->name('theme-footer');
    Route::put('appearance/theme/{slug}/footer', [ThemeFooterController::class, 'update'])->name('theme-footer.update')->where(['slug' => '[a-z0-9_-]+']);

    Route::get('appearance/theme/{slug}/footer/{footer}/content', [ThemeFooterController::class, 'content'])->name('theme-footer.content')->where(['slug' => '[a-z0-9_-]+', 'footer' => '[a-z0-9_-]+']);
    Route::post('appearance/theme/{slug}/footer/{footer}/content', [ThemeFooterController::class, 'update_content'])->where(['slug' => '[a-z0-9_-]+', 'footer' => '[a-z0-9_-]+']);
    Route::post('appearance/theme-footer/{footer}/{col}/sortable', [ThemeFooterController::class, 'sortable'])->name('theme-footer.sortable')->where('footer', '[a-z0-9_-]+')->where('col', '[0-9]+');
    Route::delete('appearance/theme-footer/delete/{block_id}', [ThemeFooterController::class, 'delete_content'])->name('theme-footer.content.delete')->where('block_id', '[0-9]+');
    Route::get('appearance/theme/{slug}/footer/block/{id}', [ThemeFooterController::class, 'block'])->name('theme-footer.block')->where(['slug' => '[a-z0-9_-]+', 'id' => '[0-9]+']);
    Route::put('appearance/theme/{slug}/footer/block/{id}', [ThemeFooterController::class, 'block_update'])->where(['slug' => '[a-z0-9_-]+', 'id' => '[0-9]+']);

    // Themes
    Route::resource('appearance/themes', ThemeController::class)->parameters(['themes' => 'slug']);
    Route::get('appearance/theme-set-active/{slug}', [ThemeController::class, 'set_active'])->name('themes.set-active')->where('slug', '[a-zA-Z0-9_-]+');

    Route::post('appearance/theme/{slug}/update-homepage-block', [ThemeHomepageController::class, 'update_block'])->name('theme.homepage.blocks.store')->where('slug', '[a-zA-Z0-9_-]+');
    Route::delete('appearance/theme/{slug}/delete-homepage-block', [ThemeHomepageController::class, 'delete_block'])->name('theme.homepage.blocks.delete')->where('slug', '[a-zA-Z0-9_-]+');
    Route::post('appearance/theme/sortable-homepage-blocks/{theme_id}', [ThemeHomepageController::class, 'sortable_blocks'])->name('theme.homepage.blocks.sortable')->where('theme_id', '[0-9]+');

    // Theme Styles
    Route::resource('appearance/theme-styles', ThemeStyleController::class)->parameters(['theme-styles' => 'id']);
    Route::get('preview-style/{id}', [ThemeStyleController::class, 'preview_style'])->name('preview-style')->where('id', '[a-z0-9_-]+');

    // Theme Buttons
    Route::resource('appearance/theme-buttons', ThemeButtonController::class)->parameters(['theme-buttons' => 'id']);

    // Blocks components
    Route::get('block-components/{type}', [BlockComponentController::class, 'type'])->name('block-components.type')->where('type', '[a-zA-Z0-9-_]+');
    Route::post('block-components/{type}', [BlockComponentController::class, 'store'])->where('type', '[a-zA-Z0-9-_]+');
    Route::get('block-components/{type}/{id}', [BlockComponentController::class, 'show'])->name('block-components.block.show')->where('id', '[0-9]+')->where('type', '[a-zA-Z0-9-_]+');
    Route::put('block-components/{type}/{id}', [BlockComponentController::class, 'update'])->name('block-components.block.update')->where('id', '[0-9]+')->where('type', '[a-zA-Z0-9-_]+');
    Route::delete('block-components/{type}/delete/{id}', [BlockComponentController::class, 'destroy'])->name('block-components.block.delete')->where('id', '[0-9]+')->where('type', '[a-zA-Z0-9-_]+');
    Route::get('block-components', [BlockComponentController::class, 'index'])->name('block-components');


    // Form block component
    Route::post('forms/config/{id}/add-field', [BlockFormController::class, 'add_field'])->name('forms.config.add_field')->where('id', '[0-9]+');
    Route::put('forms/config/{id}/update-field/{field_id}', [BlockFormController::class, 'update_field'])->name('forms.config.update_field')->where('id', '[0-9]+')->where('field_id', '[0-9]+');
    Route::delete('forms/config/{id}/delete-field/{field_id}', [BlockFormController::class, 'destroy_field'])->name('forms.config.delete_field')->where('id', '[0-9]+')->where('field_id', '[0-9]+');
    Route::post('forms/config/{id}/sortable', [BlockFormController::class, 'sortable'])->name('forms.config.sortable')->where('id', '[0-9]+');

    Route::get('forms', [FormController::class, 'index'])->name('forms');
    Route::get('forms/{id}', [FormController::class, 'show'])->name('forms.show')->where('id', '[0-9]+');
    Route::get('forms/{id}/delete', [FormController::class, 'destroy'])->name('forms.delete')->where('id', '[0-9]+');
    Route::get('forms/{id}/to-trash', [FormController::class, 'to_trash'])->name('forms.to_trash')->where('id', '[0-9]+');
    Route::get('forms/{id}/mark', [FormController::class, 'mark'])->name('forms.mark')->where('id', '[0-9]+');
    Route::post('forms/multiple-action', [FormController::class, 'multiple_action'])->name('forms.multiple_action');
    Route::delete('forms/empty-trash', [FormController::class, 'empty_trash'])->name('forms.empty_trash');


    //  admin role only
    Route::middleware(LoggedIsAdminMiddleware::class)->group(function () {
        // Languages
        Route::resource('languages', LangController::class)->parameters(['languages' => 'id']);

        // Config
        Route::get('config/{tab}', [ConfigController::class, 'index'])->name('config')->where(['tab' => '[a-zA-Z0-9_-]+']);
        Route::post('config/{tab}', [ConfigController::class, 'update'])->where(['tab' => '[a-zA-Z0-9_-]+']);
        Route::post('config-lang', [ConfigController::class, 'update_config_lang'])->where(['tab' => '[a-zA-Z0-9_-]+']);

        // Modules
        Route::get('modules', [ModuleController::class, 'index'])->name('modules');
        Route::post('modules', [ModuleController::class, 'update']);
        
        // Recycle Bin
        Route::get('recycle-bin', [RecycleBinController::class, 'index'])->name('recycle_bin');
        Route::get('recycle-bin/empty/{module}', [RecycleBinController::class, 'empty'])->name('recycle_bin.empty')->where('module', '[a-zA-Z0-9]+');
        Route::post('recycle-bin/multiple-action/{module}', [RecycleBinController::class, 'multiple_action'])->name('recycle_bin.multiple_action')->where('module', '[a-zA-Z0-9]+');
        Route::get('recycle-bin/single-action/{module}/{id}', [RecycleBinController::class, 'single_action'])->name('recycle_bin.single_action')->where('module', '[a-zA-Z0-9]+')->where('id', '[0-9]+');
        Route::get('recycle-bin/{module}', [RecycleBinController::class, 'module'])->name('recycle_bin.module')->where('module', '[a-zA-Z0-9]+');
    });

    // Blocks routes
    Route::resource('blocks', BlockController::class)->parameters(['blocks' => 'id']);


    // Other routes
    Route::get('ajax/{source}', [AjaxController::class, 'index'])->name('ajax')->where('source', '[a-z0-9_-]+');
});
