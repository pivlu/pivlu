<?php

/**
 * Pivlu - Open source CMS (Content Management System).
 * Pivlu comes with the complete suite of tools that any business, team, or website owner needs.
 * https://pivlu.com
 *
 * Copyright (c) Chimilevschi Iosif-Gabriel
 * LICENSE:
 * Permissions of this strongest copyleft license are conditioned on making available complete source code 
 * of licensed works and modifications, which include larger works using a licensed work, under the same license. 
 * Copyright and license notices must be preserved. Contributors provide an express grant of patent rights. 
 * When a modified version is used to provide a service over a network, the complete source code of the modified version must be made available.
 *    
 * @copyright   Copyright (c) Chimilevschi Iosif-Gabriel
 * @license     https://opensource.org/license/agpl-v3  AGPL-3.0 License.
 * @author      Chimilevschi Iosif-Gabriel <office@pivlu.com>
 * 
 *  DO NOT edit this file manually. All changes will be lost after software update. For custom changes, use templates ans plugins system.
 */

declare(strict_types=1);

use Illuminate\Support\Facades\Route;

use App\Http\Controllers\Admin\AccountController;
use App\Http\Controllers\Admin\AjaxController;
use App\Http\Controllers\Admin\BlockController;
use App\Http\Controllers\Admin\ConfigController;
use App\Http\Controllers\Admin\DashboardController;
use App\Http\Controllers\Admin\LangController;
use App\Http\Controllers\Admin\PostTypeController;
use App\Http\Controllers\Admin\PostTypeTaxonomyController;
use App\Http\Controllers\Admin\PostController;
use App\Http\Controllers\Admin\PostTaxonomyController;
use App\Http\Controllers\Admin\RecycleBinController;

use App\Http\Middleware\LoggedIsAdminMiddleware;

Route::get('account/admin', [DashboardController::class, 'dashboard'])->name('admin');

Route::prefix('account/admin')->name('admin.')->group(function () {
    // Dashboard
    Route::get('dashboard', [DashboardController::class, 'dashboard'])->name('dashboard');

    // Wizard
    Route::get('wizard', [DashboardController::class, 'wizard'])->name('wizard');

    // Accounts
    Route::get('accounts/deleted', [AccountController::class, 'deleted'])->name('accounts.deleted');
    Route::get('accounts/deleted/action/{action}/{id}', [AccountController::class, 'deleted_action'])->name('accounts.deleted.action')->where(['action' => '[a-z0-9_-]+'])->where('id', '[0-9]+');
   
    Route::resource('accounts', AccountController::class)->parameters(['accounts' => 'id']);

    Route::get('account/{id}/internal-notes', [AccountController::class, 'internal_notes'])->where('id', '[0-9]+')->name('account.internal_notes');
    Route::post('account/{id}/internal-notes', [AccountController::class, 'store_internal_note'])->where('id', '[0-9]+');
    Route::delete('account/{id}/internal-notes', [AccountController::class, 'destroy_internal_note'])->where('id', '[0-9]+');

    Route::get('account/{id}/block', [AccountController::class, 'block'])->where('id', '[0-9]+')->name('account.block');
    Route::post('account/{id}/action/{action}', [AccountController::class, 'action'])->where('id', '[0-9]+')->where('action', '[a-zA-Z0-9]+')->name('account.action');

    Route::get('account/{id}/reset-password', [AccountController::class, 'reset_password'])->where('id', '[0-9]+')->name('account.reset_password');
    Route::post('account/{id}/reset-password', [AccountController::class, 'reset_password_action'])->where('id', '[0-9]+');

    // Posts
    Route::resource('post-types', PostTypeController::class)->parameters(['post-types' => 'id']);
    Route::resource('post-type-taxonomies', PostTypeTaxonomyController::class)->parameters(['post-type-taxonomies' => 'id']);
    Route::resource('post-taxonomies', PostTaxonomyController::class)->parameters(['post-taxonomies' => 'id']);
        
    Route::resource('posts', PostController::class)->parameters(['posts' => 'id']);
    Route::post('posts/{id}/sortable', [PostController::class, 'sortable'])->name('posts.sortable')->where('id', '[0-9]+');
    Route::get('posts/{id}/content', [PostController::class, 'content'])->name('posts.content')->where('id', '[0-9]+');
    Route::post('posts/{id}/content', [PostController::class, 'update_content'])->name('posts.content.new')->where('id', '[0-9]+');
    Route::delete('posts/{id}/content/delete/{block_id}', [PostController::class, 'delete_content'])->name('posts.content.delete')->where('id', '[0-9]+')->where('block_id', '[0-9]+');

    Route::get('posts/{id}/delete-main-image', [PostController::class, 'delete_main_image'])->name('posts.delete_main_image')->where('id', '[0-9]+');
    Route::get('posts/{id}/custom-fieldsf', [PostController::class, 'custom_fields'])->name('post.cf');
    


    //  admin role only
    Route::middleware(LoggedIsAdminMiddleware::class)->group(function () {
        // Languages
        Route::resource('languages', LangController::class)->parameters(['languages' => 'id']);

        // Config
        Route::get('config/{tab}', [ConfigController::class, 'index'])->name('config')->where(['tab' => '[a-zA-Z0-9_-]+']);
        Route::post('config/{tab}', [ConfigController::class, 'update'])->where(['tab' => '[a-zA-Z0-9_-]+']);

        // Recycle Bin
        Route::get('recycle-bin', [RecycleBinController::class, 'index'])->name('recycle_bin');
        Route::get('recycle-bin/empty/{module}', [RecycleBinController::class, 'empty'])->name('recycle_bin.empty')->where('module', '[a-zA-Z0-9]+');
        Route::post('recycle-bin/multiple-action/{module}', [RecycleBinController::class, 'multiple_action'])->name('recycle_bin.multiple_action')->where('module', '[a-zA-Z0-9]+');
        Route::get('recycle-bin/single-action/{module}/{id}', [RecycleBinController::class, 'single_action'])->name('recycle_bin.single_action')->where('module', '[a-zA-Z0-9]+')->where('id', '[0-9]+');
        Route::get('recycle-bin/{module}', [RecycleBinController::class, 'module'])->name('recycle_bin.module')->where('module', '[a-zA-Z0-9]+');
    });

    // Blocks routes
    Route::resource('blocks', BlockController::class)->parameters(['blocks' => 'id']);

    // Other routes
    Route::get('ajax/{source}', [AjaxController::class, 'fetch'])->name('ajax')->where('source', '[a-z0-9_-]+');
});
